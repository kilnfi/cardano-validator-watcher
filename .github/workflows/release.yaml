name: Release

on:
  push:
    tags:
      - '*'

permissions:
  contents: write
  packages: write

env:
  CHART_NAME: cardano-validator-watcher
  CHART_DIRECTORY: charts
  REGISTRY: oci://ghcr.io/kilnfi/charts

jobs:
  binaries:
    runs-on: ubuntu-latest
    container:
      image: docker.io/goreleaser/goreleaser-cross:v1.24
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        name: Build & Push Container Images
        with:
          context: .
          file: Dockerfile
          labels: |-
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.name=cardano-validator-watcher"
            org.opencontainers.image.version=${{ github.ref_name }}"
            org.opencontainers.image.authors=contact@kiln.fi"
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |-
            ghcr.io/${{ github.repository_owner }}/cardano-validator-watcher:${{ github.ref_name }}
            ghcr.io/${{ github.repository_owner }}/cardano-validator-watcher:latest

  helm-chart:
    if: false
    needs: images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.16.4
      - name: Verify Chart Version
        run: |
          TAG=$(echo ${{ github.ref_name }} | sed 's/v//')
          CHART_VERSION=$(yq -r .version ${{ env.CHART_DIRECTORY }}/${{ env.CHART_NAME }}/Chart.yaml)
          if [ "$TAG" != "${CHART_VERSION}" ]; then
            echo "Version mismatch: release tag ${TAG} does not match Chart.yaml version ${CHART_VERSION}"
            exit 1
          fi
          echo "CHART_VERSION=$CHART_VERSION" >> $GITHUB_ENV
      - name: Helm Registry Login
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ghcr.io --username ${{ env.USERNAME }} --password-stdin
        env:
          USERNAME: kilnfi
      - name: 'Helm Package'
        id: helm-package
        run: |
          helm package ${{ env.CHART_DIRECTORY }}/${{ env.CHART_NAME }} --version $CHART_VERSION
      - name: 'Helm Push'
        run: |
          helm push ./cardano-validator-watcher-$CHART_VERSION.tgz ${{ env.REGISTRY }}